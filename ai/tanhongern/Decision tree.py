# -*- coding: utf-8 -*-
"""present

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X1ss3ftoB0wcYBMHcLXDcd4cP7AWJxjs
"""

# Load libraries
import pandas as pd
from sklearn.tree import DecisionTreeClassifier # Import Decision Tree Classifier
from sklearn.model_selection import train_test_split # Import train_test_split function
from sklearn import metrics #Import scikit-learn metrics module for accuracy calculation

col_features = ['Forehead_width','Cheeks_width','Jawline_length','Face_length','Face_Type']
# load dataset
pima = pd.read_csv("faces_data.csv", header=None, names=col_features)

pima.head()

#split dataset in features and target variable
feature_cols = ['Forehead_width','Cheeks_width','Jawline_length','Face_length']
X = pima[feature_cols] # Features
y = pima.Face_Type # Target variable

# Split dataset into training set and test set
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1) # 70% training and 30% test

# Create Decision Tree classifer object
clf = DecisionTreeClassifier()

# Train Decision Tree Classifer
clf = clf.fit(X_train,y_train)

#Predict the response for test dataset
y_pred = clf.predict(X_test)

# Model Accuracy, how often is the classifier correct?
print("Accuracy:",metrics.accuracy_score(y_test, y_pred))

col_names = ['Forehead_width','Cheeks_width','Jawline_length','Face_length']
rima = pd.read_csv("new_data.csv")

rima.head()

y_pred_new = clf.predict(rima)
print(y_pred_new)

file = open('new_data.csv', 'r')
lines = file.readlines()
for i in lines:
  for j in y_pred_new:
    print(i+',',j)